@import "~office-ui-fabric-react/dist/sass/References.scss";

.ReactScrollCalendar {
  --BlueDark-2: #40434a;
  --BlueDark-1: #343d56;
  --BlueDark: #1b2952;
  --BlueDark1: #1b2952;
  --BlueDark2: #1b2952;
  --Blue-2: #204d6c;
  --Blue-1: #2c6992;
  --Blue: #3681b5;
  --Blue1: #afcde1;
  --Blue2: #d7e6f0;
  --Orange-1: #ad480e;
  --Orange: #ff6a13;
  --Orange1: #ffc3a1;
  --Orange2: #ffe1d0;
  --Grey-1: #bfb7af;
  --Grey: #d7d2cb;
  --Grey1: #efedea;
  --Grey2: #f7f6f5;
  --Red-1: #a02e06;
  --Red: #e03c03;
  --Red1: #f6c4b3;
  --Yellow-1: #b68225;
  --Yellow: #ffb42f;
  --Yellow1: #ffe8c0;
  --SeaGreen-1: #058784;
  --SeaGreen: #01bcb8;
  --SeaGreen1: #b2ebea;
  --Green-1: #648e3d;
  --Green: #8ac552;
  --Green1: #dcedcb;
  --BlueIce: #97caeb;

  --StartDay: 5;

  box-sizing: border-box;
  // display: flex;

  .keyscontainer {
    position: absolute;
    width: 180px;
    top: 100px;
    left: 106%;
    background-color: whitesmoke;
    border: 2px solid silver;
    border-radius: 10px 0 0 10px;
    padding: 2px 0 20px 30px;
    user-select:none;
    h4 {
      margin: 10px 0px 3px 0;
      color: var(--Blue-1);
    }
    h5 {
      margin: 2px 3px;
    }
    transition: 400ms ease-in;
    .showkey {
      position: absolute;
      left: -37px;
      top: 30px;
      background-color: var(--Red-1);
      color: white;
      transform: rotate(-90deg);
      width: 38px;
      text-align: center;
      padding: 3px;
      font-weight: 500;
      font-size: 1rem;
      border-radius: 7px 7px 0 0;
    }
  }

  .keyscontainer:hover {
    left: 85%;
    padding: 2px 0 20px 10px;
    transition: 400ms ease-out;
  }

  .calendarContaner {
    width: 100%;
    box-sizing: border-box;
    // position: absolute;

    .navigationheader {
      box-sizing: border-box;
      height: 27px;
      // background-color: var(--$Blue)1;
      user-select:none;


      ul {
        display: flex;
        padding: 2px 0 4px 0;
        margin: 0px;
      }

      li {
        flex: 0 0 8%;
        list-style-type: none;
        text-align: center;
        border-right: 1px solid var(--Grey-1);

        .monthname {
          color: var(--BlueDark-2);
          font-weight: 500;
          font-size: 0.8rem;
          border-bottom: 3px solid white;
          height: 1rem;
        }
        .activemonthname {
          border-bottom: 3px solid var(--Orange);
          color: var(--Orange);
          font-weight: 700;
          font-size: 1rem;
          background-color: var(--var(--Blue) 2);
          padding: 0 10px;
        }
      }
    }
    .calendarheader {
      display: grid;
      grid-template-columns: repeat(7, 14.25%);
      box-sizing: border-box;
      background-color: var(--Blue);
      padding: 4px 0px;
      margin: 0px 16px 0 0;
      color: white;
      font-weight: 500;
      text-align: center;
      font-size: 1rem;
      user-select: none;

      .dayname {
        border-right: 2px solid #ffffff;
      }
    }

    .calendarScrollContainer {
      width: 100%;
      height: 800px;
      overflow-y: scroll;
      overflow-x: hidden;
    }

    .daysContainer {
      display: grid;
      grid-template-columns: repeat(7, 14.25%);
      grid-template-rows: repeat(106, 150px);
      box-sizing: border-box;

      .day {
        box-sizing: border-box;
        border-left: 0px solid var(--Grey-1);
        display: table-cell;
        position: relative;
        user-select:none;

        h5 {
          background-color: var(--Blue1);
          color: var(--BlueDark-1);
          margin: 0px;
          text-align: center;
          font-size: 0.9rem;
          padding: 3px;
          box-sizing: border-box;
          border-right: 1px solid var(--Grey-1);
        }

        //the event is a fixed height container that has three main modes, it always has a line 100% width and its got a
        // margin top so its in the middle of the event div. It can have a div with a "First" class  and or a div with an end Class
        // these are the three elements of an event. it can span multiple days or be in one day only
        // all the markup is built with Border, the first has a border, the line is actually a border, the end cap is a border
        // all inheritign colours from a dummy container called eventguts, if i set a color on event guts then everythign inherits from it, so all // of the elements of the event CSS are coloured at the same time.

        .event {
          height: 27px;
          width: 100%;
          position: absolute;
          box-sizing: border-box;
          .eventguts {
            .line {
              height: 0px;
              border-top: 5px solid;
              border-color: inherit;
              margin: 11px 0 0 0;
              position: relative;
            }

            .first {
              background-color: whitesmoke;
              color: black;
              position: absolute;
              width: 70px;
              height: 100%;
              top: 0;
              padding: 3px 0px;
              box-sizing: border-box;
              border-radius: 10px;
              text-align: center;
              border: 2px solid;
              border-color: inherit;
            }
            .end {
              position: absolute;
              width: 10px;
              height: 10px;
              border: 5px solid;
              border-color: inherit;
              background-color: white;
              border-radius: 50%;
              top: 3px;
              margin-left: calc(100% - 20px);
            }
          }
        }

        // these are based on the person each one gets a row to themselves
        // i suppose we can do some better logic to flaot them up but its
        // beyoind em at the moment so one row per person it is...
        .event[data-row="0"] {
          margin-top: 5px;
        }
        .event[data-row="1"] {
          margin-top: 35px;
        }
        .event[data-row="2"] {
          margin-top: 65px;
        }
        .event[data-row="3"] {
          margin-top: 90px;
        }
      }

      //TODO  offset for the day of the YEAR i will need to figure out how to make it dynamic
      //TODO  so it works after Dec 31st but months to go for that :-)
      //todo this can be a variable set from the code ?
      .day:first-child {
        grid-column: var(--StartDay);
      }

      //set the header colour for the odd months cant use a count as my unit is days not months on account of the intention to make the calendar
      // more natural by making it scrollable
      .day[data-month="1"] h5,
      .day[data-month="3"] h5,
      .day[data-month="5"] h5,
      .day[data-month="7"] h5,
      .day[data-month="9"] h5,
      .day[data-month="11"] h5 {
        background-color: var(--Blue2);
        color: var(--BlueDark-2);
      }

      // Saturday & Sunday
      .day[id*="d0"],
      .day[id*="d6"] {
        background-color: var(--Grey1);
      }

      //todo I may see about floating this in front of the other content with top 0 and some opacity
      //todo then the issue of the end div havign a white bit should dissapear

      .overlay {
        background-color: rgba(197, 156, 156, 0.4);
        position: relative;
        width: 100%;
        height: 100%;
        top: 0px;
        div {
          width: 100%;
          text-align: center;
          padding-top: 25px;
          position: absolute;
          background-color: transparent;
        }
      }
    }
  }
}
